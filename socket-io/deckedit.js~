var deckEdit = require('../models/deckedit');

module.exports = function (socket) {
  socket.on('saveFlashcard', function (flashcard) {
    deckEdit.saveFlashcard(socket.handshake.user.id, flashcard)
    .then(function (flashcardId) {
      console.log('emit flashcardSaved with localId=' + flashcard.localId +
                  ' and id=' + flashcardId);
      socket.emit('flashcardSaved', {
        localId: flashcard.localId, 
        id     : flashcardId
      });
    })
    .catch(function (err) {
      console.log(err);
      socket.emit('saveFlashcardError', flashcard);
    })
    .done();
  });

  socket.on('moveFlashcard', function (data) {
    deckEdit.moveFlashcard(socket.handshake.user.id, 
                           data.flashcardId,
                           data.beforeId)
    .then(function () {
      socket.emit('flashcardMoved', data);
    })
    .catch(function () {
      socket.emit('moveFlashcardError', data);
    })
    .done();
  });

  socket.on('deleteFlashcard', function (flashcard) {
    deckEdit.deleteFlashcard(socket.handshake.user.id, flashcard.id)
    .then(function () {
      socket.emit('flashcardDeleted', flashcard);
    })
    .catch(function (err) {
      console.log(err);
      socket.emit('deleteFlashcardError', flashcard);
    })
    .done();
  });
};

var files = {};

socket.on('start', function (data) { 
  var name = data.name;
  files[name] = {  //Create a new Entry in The Files Variable
    fileSize : data.size,
    data     : '',
    downloaded : 0
  };
  var place = 0;
  try {
    var stat = fs.statSync('temp/' +  name);
    if(stat.isFile()) {
        files[name].nownloaded = stat.size;
        place = stat.size / 524288;
      }
  }
  catch(er){} //It's a New File
  fs.open('temp/' + name, 'a', 0755, function (err, fd) {
    if (err) {
      console.log(err);
    }
    else {
      //We store the file handler so we can write to it later
      files[name].handler = fd; 
      socket.emit('moreData', {'place' : place, percent : 0});
    }
  });
});
